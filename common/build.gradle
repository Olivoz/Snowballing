architectury {
    common(rootProject.enabled_platforms.split(","))
    injectInjectables = false
    addCommonMarker = false
}

loom {
    accessWidenerPath = file("src/main/resources/snowballing.accesswidener")
}

dependencies {
    compileOnly(project(path: ":registry", configuration: "namedElements")) { transitive false }

    // We depend on fabric loader here to use the fabric @Environment annotations and get the mixin dependencies
    // Do NOT use other classes from fabric loader
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"

    // We depend on fabric api to get the accesswidener of ItemProperties#register that's present in Forge and Fabric API
    modApi "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_api_version}"
}

publishing {
    publications {
        mavenCommon(MavenPublication) {
            artifactId = rootProject.archives_base_name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}
